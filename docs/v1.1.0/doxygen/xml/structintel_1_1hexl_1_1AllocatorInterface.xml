<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structintel_1_1hexl_1_1AllocatorInterface" kind="struct" language="C++" prot="public">
    <compoundname>intel::hexl::AllocatorInterface</compoundname>
    <basecompoundref refid="structintel_1_1hexl_1_1AllocatorBase" prot="public" virt="non-virtual">intel::hexl::AllocatorBase</basecompoundref>
    <includes refid="allocator_8hpp" local="no">allocator.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>AllocatorImpl</declname>
        <defname>AllocatorImpl</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structintel_1_1hexl_1_1AllocatorInterface_1a02d2d7918ea916fce443ba2f5dbaa8d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>void* intel::hexl::AllocatorInterface&lt; AllocatorImpl &gt;::allocate</definition>
        <argsstring>(size_t bytes_count) override</argsstring>
        <name>allocate</name>
        <reimplements refid="structintel_1_1hexl_1_1AllocatorBase_1aadf587e7617fbace2e9d3b4f9d9e8af0">allocate</reimplements>
        <param>
          <type>size_t</type>
          <declname>bytes_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" line="20" column="1" bodyfile="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="structintel_1_1hexl_1_1AllocatorInterface_1a2684feec3b8f3cfba626b46912b4cec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void intel::hexl::AllocatorInterface&lt; AllocatorImpl &gt;::deallocate</definition>
        <argsstring>(void *p, size_t n) override</argsstring>
        <name>deallocate</name>
        <reimplements refid="structintel_1_1hexl_1_1AllocatorBase_1a0f03686f9b78728d4d228ceaf4c2948e">deallocate</reimplements>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" line="23" column="1" bodyfile="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" bodystart="23" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structintel_1_1hexl_1_1AllocatorInterface_1ae6870257f68a2d53d0f818bf3f5136ad" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* intel::hexl::AllocatorInterface&lt; AllocatorImpl &gt;::allocate_impl</definition>
        <argsstring>(size_t bytes_count)</argsstring>
        <name>allocate_impl</name>
        <param>
          <type>size_t</type>
          <declname>bytes_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" line="30" column="1" bodyfile="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structintel_1_1hexl_1_1AllocatorInterface_1ad50d01a0736610117e5fed4829522f6c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void intel::hexl::AllocatorInterface&lt; AllocatorImpl &gt;::deallocate_impl</definition>
        <argsstring>(void *p, size_t n)</argsstring>
        <name>deallocate_impl</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" line="35" column="1" bodyfile="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" bodystart="35" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structintel_1_1hexl_1_1AllocatorInterface_1a78555da960b661ad43cae7c491e9764c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>error_code</declname>
            <defname>error_code</defname>
          </param>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>static constexpr int intel::hexl::AllocatorInterface&lt; AllocatorImpl &gt;::fail_message</definition>
        <argsstring>()</argsstring>
        <name>fail_message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" line="43" column="1" bodyfile="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" bodystart="43" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11">
        <label>intel::hexl::AllocatorInterface&lt; AllocatorImpl &gt;</label>
        <link refid="structintel_1_1hexl_1_1AllocatorInterface"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>intel::hexl::AllocatorBase</label>
        <link refid="structintel_1_1hexl_1_1AllocatorBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13">
        <label>intel::hexl::AllocatorInterface&lt; AllocatorImpl &gt;</label>
        <link refid="structintel_1_1hexl_1_1AllocatorInterface"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>intel::hexl::AllocatorBase</label>
        <link refid="structintel_1_1hexl_1_1AllocatorBase"/>
      </node>
    </collaborationgraph>
    <location file="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" line="18" column="1" bodyfile="/home/gelila/Desktop/workspace/intel-hexl/hexl/include/hexl/util/allocator.hpp" bodystart="18" bodyend="52"/>
    <listofallmembers>
      <member refid="structintel_1_1hexl_1_1AllocatorInterface_1a02d2d7918ea916fce443ba2f5dbaa8d1" prot="public" virt="virtual"><scope>intel::hexl::AllocatorInterface</scope><name>allocate</name></member>
      <member refid="structintel_1_1hexl_1_1AllocatorInterface_1ae6870257f68a2d53d0f818bf3f5136ad" prot="private" virt="non-virtual"><scope>intel::hexl::AllocatorInterface</scope><name>allocate_impl</name></member>
      <member refid="structintel_1_1hexl_1_1AllocatorInterface_1a2684feec3b8f3cfba626b46912b4cec5" prot="public" virt="virtual"><scope>intel::hexl::AllocatorInterface</scope><name>deallocate</name></member>
      <member refid="structintel_1_1hexl_1_1AllocatorInterface_1ad50d01a0736610117e5fed4829522f6c" prot="private" virt="non-virtual"><scope>intel::hexl::AllocatorInterface</scope><name>deallocate_impl</name></member>
      <member refid="structintel_1_1hexl_1_1AllocatorInterface_1a78555da960b661ad43cae7c491e9764c" prot="private" virt="non-virtual"><scope>intel::hexl::AllocatorInterface</scope><name>fail_message</name></member>
      <member refid="structintel_1_1hexl_1_1AllocatorBase_1ac8a2afdc70cef8b7c9342aa2281ea4d5" prot="public" virt="virtual"><scope>intel::hexl::AllocatorInterface</scope><name>~AllocatorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
