image: ubuntu:18.04

variables:
  http_proxy: http://10.7.211.16:911
  https_proxy: http://10.7.211.16:912

before_script:
  - whoami
  - export DEFAULT_COMPILER_FLAGS="-DCMAKE_CXX_COMPILER=clang++-10
      -DCMAKE_C_COMPILER=clang-10
      -DLATTICE_BENCHMARK=ON
      -DLATTICE_TESTING=ON
      -DLATTICE_COVERAGE=OFF"
  - export DEBUG_COMPILER_FLAGS="-DCMAKE_CXX_COMPILER=g++-7
      -DCMAKE_C_COMPILER=gcc-7
      -DLATTICE_DEBUG=ON
      -DLATTICE_BENCHMARK=ON
      -DLATTICE_TESTING=ON
      -DLATTICE_COVERAGE=ON"
  - export GCOV_BIN="/usr/bin/gcov-7"
  - export DEFAULT_EXAMPLE_FLAGS="-DINTEL_LATTICE_LIBRARY=${CI_PROJECT_DIR}/build/libintel_lattice.a
                                  -DINTEL_LATTICE_HEADER=${CI_PROJECT_DIR}/intel-lattice/include"
  - cmake --version

stages:
  - format
  - build
  - test
  - example
  - benchmark

format:
  stage: format
  only:
    refs:
      - merge_requests
      - master
  script:
    # Run formatting
    - pre-commit run --all-files

default_build:
  stage: build
  only:
    refs:
      - merge_requests
      - master
  script:
    - whoami
    - echo $HOME
    - echo "Testing from branch:"
    - echo $CI_COMMIT_REF_NAME
    - pwd

    # Build library
    - mkdir -p build
    - cd build
    - cmake .. ${DEFAULT_COMPILER_FLAGS}
    - make -j all
    # Build example
    - cd ../example
    - mkdir -p build
    - cd build
    - cmake .. ${DEFAULT_COMPILER_FLAGS} ${DEFAULT_EXAMPLE_FLAGS}
    - make -j
  artifacts:
    paths:
        - build/
        - example/build
    expire_in: 1 day

debug_build:
  stage: build
  only:
    refs:
      - merge_requests
      - master
  script:
    - whoami
    - echo $HOME
    - echo "Testing from branch:"
    - echo $CI_COMMIT_REF_NAME
    - pwd

    # Build repo
    - mkdir -p build
    - cd build
    - cmake .. ${DEBUG_COMPILER_FLAGS}
    - make -j all
  artifacts:
    paths:
        - build/
    expire_in: 1 day

default_example:
  stage: example
  only:
    refs:
      - merge_requests
      - master
  script:
    - example/build/example
  artifacts:
    paths:
        - example/build
    expire_in: 1 day
  dependencies:
    - default_build

test:
  stage: test
  only:
    refs:
      - merge_requests
      - master
  script:
    - pwd
    - ls
    - build/test/unit-test
    - example/build/example
  dependencies:
    - default_build

debug_test:
  stage: test
  only:
    refs:
      - merge_requests
      - master
  script:
    - pwd
    - ls
    # Generate initial baseline
    - lcov --no-external --capture --initial --directory build/test/CMakeFiles/unit-test.dir --gcov-tool /usr/bin/gcov-7 --output-file test_cov.info
    - build/test/unit-test
    # Run lcov again
    - lcov --capture --directory build/test/CMakeFiles/unit-test.dir --gcov-tool /usr/bin/gcov-7 --output-file test_cov.info
     # Remove unwanted directories
    - lcov --remove test_cov.info '/usr/include/*' '/usr/lib/*' '${CI_PROJECT_DIR}/build/*' -o test_cov.info
    # report overall summary to be parsed by gitlab CI
    - lcov --list test_cov.info
    # Generate coverage html
    - genhtml test_cov.info --output-directory coverage

  dependencies:
    - debug_build
  artifacts:
    paths:
        - coverage/
    expire_in: 1 day

benchmark:
  stage: benchmark
  only:
    refs:
      - merge_requests
      - master
  script:
    - build/benchmark/bench_lattice --benchmark_out="${CI_JOB_NAME}_${CI_COMMIT_SHA}" --benchmark_out_format=csv
  dependencies:
  - default_build
  artifacts:
    paths:
      - "${CI_JOB_NAME}_${CI_COMMIT_SHA}"
    expire_in: 5 yr
